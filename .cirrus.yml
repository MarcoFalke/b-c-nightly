container:
  kvm: true
  cpu: 2
  memory: 6G
timeout_in: 120m
env:
  TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
  DEBIAN_FRONTEND: "noninteractive"
task:
  name: "Windows [gitian]"
  windows_container:
    image: cirrusci/windowsservercore:2019
  env:
    CIRRUS_SHELL: powershell
    PATH: 'C:\Python37;C:\Python37\Scripts;%PATH%'
    PYTHONUTF8: 1
    PYTHONIOENCODING: 'UTF-8'
    SHASUM: 'sha256sum'
  install_script:
    - choco install python --version=3.7.7 -y
    - powershell "python --version"
    - powershell 'C:\Python37\Scripts\pip install pyzmq'
  download_script:
    - git clone https://github.com/bitcoin/bitcoin.git ./bitcoin-core-nightly
    - cd bitcoin-core-nightly
    - set SRCDIR=$(pwd)
    - echo $SRCDIR
    - powershell "python ../download_latest_nightly.py --bin=WIN --srcdir=${SRCDIR}"
    - set VERSION=$(tail -1 ./version.txt)
    - set BUILDDIR=$(tail -1 ./build_dir.txt)
    - echo $VERSION
    - echo $BUILDDIR
#   script:
#    - ${BUILDDIR}/src/test_bitcoin.exe
#    - cd ${SRCDIR}
#    - git checkout $VERSION
#    - powershell "${PYTHON} ./test/util/bitcoin-util-test.py -v"
#    - powershell "${PYTHON} ./test/functional/test_runner.py --timeout-factor=10"
#after_script:
#    - cd ${SRCDIR}
#    - git log -1
#    - cd ${BUILDDIR}
#    - $SHASUM ./src/*
task:
  name: "FreeBsd 13.0 [system libs]"
  freebsd_instance:
    image_family: freebsd-13-0  # https://cirrus-ci.org/guide/FreeBSD/
  env:
    MAKEJOBS: "-j4"
    CONFIGURE_OPTS: "--disable-dependency-tracking"
    CCACHE_SIZE: "200M"
    CCACHE_COMPRESS: 1
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - pkg install -y m4 autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache
    - ccache --max-size=${CCACHE_SIZE}
    - git clone https://github.com/stewartsmith/libeatmydata.git
    - cd libeatmydata
    - autoreconf -i
    - ./configure
    - sed -i -e 's/O_DSYNC/O_SYNC/g' $(git grep -l O_DSYNC)
    - make
    - make install  # eatmydata
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
    - ./contrib/install_db4.sh $(pwd)
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure ${CONFIGURE_OPTS} BDB_LIBS="-L$(pwd)/db4/lib -ldb_cxx-4.8" BDB_CFLAGS="-I$(pwd)/db4/include" || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - gmake ${MAKEJOBS} || ( echo "Build failure. Verbose build follows." && gmake V=1 ; false )
  check_script:
    - cd bitcoin-core
    - gmake check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - eatmydata ./test/functional/test_runner.py $MAKEJOBS --ci --extended --exclude feature_block,feature_dbcrash,p2p_timeouts --combinedlogslen=1000 --quiet --failfast --timeout-factor=10
task:
  name: "CentOS 8 [system libs]"
  container:
    image: centos:8
  env:
    MAKEJOBS: "-j4"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - dnf -y install epel-release dnf-plugin*
    - dnf config-manager --set-enabled PowerTools
    - dnf install -y ccache gcc-c++ libtool make git python3 python3-zmq boost-devel libevent-devel libdb-cxx-devel zeromq-devel qt5-qtbase-devel qt5-qttools-devel qrencode-devel  # upnp disabled for now
    - ccache --max-size=${CCACHE_SIZE}
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure --with-incompatible-bdb || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - make ${MAKEJOBS} || ( echo "Build failure. Verbose build follows." && make V=1 ; false )
  check_script:
    - cd bitcoin-core
    - make check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - ./test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=1000 --quiet --failfast --timeout-factor=3
task:
  name: "debian:experimental [system libs, clang]"
  container:
    image: debian:experimental
  env:
    MAKEJOBS: "-j4"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - apt update && apt -t experimental install clang git ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb++-dev qttools5-dev qttools5-dev-tools -y
    - ccache --max-size=${CCACHE_SIZE}
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure --with-incompatible-bdb CC=clang CXX=clang++ || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - make ${MAKEJOBS} ${GOAL} || ( echo "Build failure. Verbose build follows." && make ${GOAL} V=1 ; false )
  check_script:
    - cd bitcoin-core
    - make check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - ./test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=1000 --quiet --failfast --timeout-factor=3
task:
  name: "debian:experimental [system libs, gcc]"
  container:
    image: debian:experimental
  env:
    MAKEJOBS: "-j4"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - apt update && apt -t experimental install git ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb++-dev qttools5-dev qttools5-dev-tools -y
    - ccache --max-size=${CCACHE_SIZE}
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure --with-incompatible-bdb || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - make ${MAKEJOBS} ${GOAL} || ( echo "Build failure. Verbose build follows." && make ${GOAL} V=1 ; false )
  check_script:
    - cd bitcoin-core
    - make check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - ./test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=1000 --quiet --failfast --timeout-factor=3
task:
  name: "Alpine [system libs]"
  container:
    image: alpine:latest
  env:
    LC_ALL: "C"
    MAKEJOBS: "-j4"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - apk --no-cache --update add autoconf automake g++ gcc git libtool make pkgconfig python3 boost-dev libevent-dev zeromq-dev qt5-qtbase-dev qt5-qttools-dev ccache
    - ccache --max-size=${CCACHE_SIZE}
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure --disable-wallet || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - make ${MAKEJOBS} || ( echo "Build failure. Verbose build follows." && make V=1 ; false )
  check_script:
    - cd bitcoin-core
    - make check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - ./test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=1000 --quiet --failfast --timeout-factor=3
task:
  name: "Arch [system libs]"
  container:
    image: archlinux:latest
  env:
    MAKEJOBS: "-j4"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - pacman --noconfirm -Syu autoconf automake git gcc libtool make pkg-config python3 boost libevent zeromq ccache qt5
    - ccache --max-size=${CCACHE_SIZE}
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  configure_script:
    - cd bitcoin-core
    - ./autogen.sh
    - ./configure --disable-wallet || ( cat config.log && false)
  make_script:
    - cd bitcoin-core
    - make ${MAKEJOBS} || ( echo "Build failure. Verbose build follows." && make V=1 ; false )
  check_script:
    - cd bitcoin-core
    - make check ${MAKEJOBS} VERBOSE=1
  functional_test_script:
    - cd bitcoin-core
    - ./test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=1000 --quiet --failfast --timeout-factor=3
task:
  name: "s390x [depends, qemu]"
  container:
    image: debian:buster
    cpu: 4
    memory: 10G
  env:
    FILE_ENV: "./ci/test/00_setup_env_s390x.sh"
    MAKEJOBS: "-j10"
    DANGER_RUN_CI_ON_HOST: "1"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
  ci_script:
    - cd bitcoin-core
    - ./ci/test_run_all.sh
task:
  name: "valgrind [focal, system libs]"
  container:
    image: ubuntu:20.04  # valgrind supp is for bionic/focal
    cpu: 6
    memory: 14G  # valgrind needs a lot of memory
  env:
    FILE_ENV: "./ci/test/00_setup_env_native_valgrind.sh"
    MAKEJOBS: "-j12"
    DANGER_RUN_CI_ON_HOST: "1"
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
  ci_script:
    - cd bitcoin-core
    - ./ci/test_run_all.sh
task:
  name: "fedora [system libs, tsan]"
  container:
    image: fedora:34
  env:
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - dnf install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  install_pkgs_script:
    - dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb-cxx-devel python3 clang qt5-qttools-devel qt5-qtbase-devel -y
  build_script:
    - cd bitcoin-core
    - ./autogen.sh && ./configure --enable-suppress-external-warnings --with-sanitizers=thread --with-incompatible-bdb CC=clang CXX=clang++
    - make -j 4
  san_test_script:
    - cd bitcoin-core
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - make -j 4 check
    - ./test/functional/test_runner.py -j 4
task:
  name: "fedora [system libs, asan]"
  container:
    image: fedora:34
  env:
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - dnf install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
  install_pkgs_script:
    - dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb-cxx-devel python3 clang qt5-qttools-devel qt5-qtbase-devel -y
  ci_script:
    - cd bitcoin-core
    - ./autogen.sh && ./configure --with-sanitizers=address,integer,undefined --with-incompatible-bdb CC=clang CXX=clang++
    - make -j 4
  san_test_script:
    - cd bitcoin-core
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - make -j 4 check
    - ./test/functional/test_runner.py -j 4 --timeout-factor=5
task:
  name: "fedora [system libs, fuzz, tsan]"
  container:
    image: fedora:34
    cpu: 4
    memory: 6G
  env:
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - dnf install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - git clone https://github.com/bitcoin-core/qa-assets --depth=1
  install_pkgs_script:
    - dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb-cxx-devel python3 clang qt5-qttools-devel qt5-qtbase-devel -y
  ci_script:
    - cd bitcoin-core
    - ./autogen.sh && ./configure --with-sanitizers=fuzzer,thread --enable-fuzz --enable-c++17 --with-incompatible-bdb CC=clang CXX=clang++
    - make -j 4
  tsan_test_script:
    - cd bitcoin-core
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - ./test/fuzz/test_runner.py -j 4 -l DEBUG ../qa-assets/fuzz_seed_corpus/
task:
  name: "fedora [system libs, fuzz, asan]"
  container:
    image: fedora:34
    cpu: 4
    memory: 6G
  env:
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - dnf install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - git clone https://github.com/bitcoin-core/qa-assets --depth=1
  install_pkgs_script:
    - dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb-cxx-devel python3 clang qt5-qttools-devel qt5-qtbase-devel -y
  ci_script:
    - cd bitcoin-core
    - ./autogen.sh && ./configure --with-sanitizers=fuzzer,address,integer,undefined --enable-fuzz --enable-c++17 --with-incompatible-bdb CC=clang CXX=clang++
    - make -j 4
  tsan_test_script:
    - cd bitcoin-core
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - ./test/fuzz/test_runner.py -j 4 -l DEBUG ../qa-assets/fuzz_seed_corpus/
task:
  name: "focal [system libs, fuzz, enable debug]"
  container:
    image: ubuntu:20.04
  env:
    FILE_ENV: "./ci/test/00_setup_env_native_fuzz_enable_debug.sh"
    MAKEJOBS: "-j4"
    DANGER_RUN_CI_ON_HOST: "1"
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
    - mv ../00_setup_env_native_fuzz_enable_debug.sh ./ci/test/
    - sed -i 's/FuzzedDataProvider fuzzed_data_provider/return;FuzzedDataProvider fuzzed_data_provider/g' ./src/test/fuzz/validation_load_mempool.cpp
  ci_script:
    - cd bitcoin-core
    - ./ci/test_run_all.sh
task:
  name: "focal [system libs, fuzz, depends DEBUG]"
  container:
    image: ubuntu:20.04
  env:
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - git clone https://github.com/bitcoin-core/qa-assets --depth=1
  install_pkgs_script:
    - apt update && apt install curl wget htop git vim ccache llvm clang  build-essential libtool autotools-dev automake pkg-config bsdmainutils -y
  depends_script:
    - cd bitcoin-core
    - cd depends
    - make DEBUG=1 NO_QT=1 NO_WALLET=1 NO_ZMQ=1 NO_UPNP=1 NO_NATPMP=1 -j 4
  fuzz_build_script:
    - cd bitcoin-core
    - ./autogen.sh && CC=clang CXX=clang++ CONFIG_SITE="$PWD/depends/x86_64-pc-linux-gnu/share/config.site" ./configure --enable-fuzz --enable-debug --with-sanitizers=fuzzer
    - make -j 4
  fuzz_run_script:
    - cd bitcoin-core
    - ./test/fuzz/test_runner.py -j 4 -l DEBUG ../qa-assets/fuzz_seed_corpus/
